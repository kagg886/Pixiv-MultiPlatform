name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Generate AboutLibraries Metadata
        run: ./gradlew exportLibraryDefinitions

      - name: Build MSI And Content with Gradle Wrapper
        run: ./gradlew light

      - name: zip binaries artifact
        run: powershell -Command "Compress-Archive -Path 'composeApp\build\compose\binaries\main-release\app\Pixiv-MultiPlatform' -DestinationPath 'composeApp\build\compose\binaries\main-release\app\windows.zip'"

      - name: Upload Windows binaries artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows.zip
          path: composeApp\build\compose\binaries\main-release\app\windows.zip

      - name: Upload Windows MSI artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows.msi
          path: composeApp\build\compose\binaries\main-release\app\windows.msi

      - name: Upload Proguard Mapping File
        uses: actions/upload-artifact@v4
        with:
          name: proguard-windows.mapping
          path: composeApp\mappings-desktop-currentOS.txt
          if-no-files-found: error
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Generate AboutLibraries Metadata
        run: ./gradlew exportLibraryDefinitions

      - name: Build with Gradle Wrapper
        run: |
          chmod +x ./gradlew
          ./gradlew packageReleaseDistributionForCurrentOS

      - name: Zip artifact
        run: tar -czvf linux.tar.gz -C composeApp/build/compose/binaries/main-release/app .

      - name: Upload linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux.tar.gz
          path: linux.tar.gz

      - name: Upload Proguard Mapping File
        uses: actions/upload-artifact@v4
        with:
          name: proguard-linux.mapping
          path: composeApp/mappings-desktop-currentOS.txt
          if-no-files-found: error
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Rust Toolchain
        run: rustup target add aarch64-linux-android x86_64-linux-android

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Generate AboutLibraries Metadata
        run: ./gradlew exportLibraryDefinitions -PaboutLibraries.exportVariant=release

      - name: Build with Gradle Wrapper
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease
      - name: Rename apk
        run: |
          mv composeApp/build/outputs/apk/release/composeApp-release.apk composeApp/build/outputs/apk/release/android.apk
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android.apk
          path: composeApp/build/outputs/apk/release/android.apk
      - name: Upload Proguard Mapping File
        uses: actions/upload-artifact@v4
        with:
          name: proguard-android.mapping
          path: composeApp/build/outputs/mapping/release/mapping.txt
          if-no-files-found: error
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Generate AboutLibraries Metadata
        run: ./gradlew exportLibraryDefinitions

      - name: Build with Gradle Wrapper
        run: ./gradlew packageReleaseDmg

      - name: Rename artifact
        run: |
          filename=$(ls composeApp/build/compose/binaries/main-release/dmg/)
          mv composeApp/build/compose/binaries/main-release/dmg/${filename} composeApp/build/compose/binaries/main-release/dmg/macos.dmg

      - name: Upload macos artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos.dmg
          path: composeApp/build/compose/binaries/main-release/dmg/macos.dmg

      - name: Upload Proguard Mapping File
        uses: actions/upload-artifact@v4
        with:
          name: proguard-macos.mapping
          path: composeApp/mappings-desktop-currentOS.txt
          if-no-files-found: error

  build-ios:
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Rust Toolchain
        run: rustup target add aarch64-apple-ios

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Generate AboutLibraries Metadata
        run: ./gradlew exportLibraryDefinitions

      - name: Build with Gradle Wrapper
        run: |
          export PATH=/Applications/Xcode_16.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.sdk/usr/lib:$PATH
          export LIBRARY_PATH="$LIBRARY_PATH:/Applications/Xcode_16.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.sdk/usr/lib"
          ./gradlew buildReleaseIpa

      - name: Rename artifact
        run: |
          mv composeApp/build/archives/release/Pixiv-MultiPlatform.ipa composeApp/build/archives/release/ios.ipa

      - name: Upload macos artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios.ipa
          path: composeApp/build/archives/release/ios.ipa
